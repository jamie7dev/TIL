문자열 내 p와 y의 개수
문제 설명
대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 'p'의 개수와 'y'의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. 'p', 'y' 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.

예를 들어 s가 "pPoooyY"면 true를 return하고 "Pyy"라면 false를 return합니다.

제한사항
문자열 s의 길이 : 50 이하의 자연수
문자열 s는 알파벳으로만 이루어져 있습니다.
입출력 예
s	answer
"pPoooyY"	true
"Pyy"	false
입출력 예 설명
입출력 예 #1
'p'의 개수 2개, 'y'의 개수 2개로 같으므로 true를 return 합니다.

입출력 예 #2
'p'의 개수 1개, 'y'의 개수 2개로 다르므로 false를 return 합니다.

※ 공지 - 2021년 8월 23일 테스트케이스가 추가되었습니다.


-----------------------------------

function solution(s){
    var word = s.toLowerCase();                 //입력 받은 s를 소문자로 바꿈
    arr = word.split("");                       //배열에 각 알파벳을 따로 저장
    
    var count_p = 0;                            //'p'가 있으면 count 1씩 추가
    for (let i= 0; i < word.length; i++) {
        if (arr[i] === 'p' ){
            count_p++
        }
    }
    var count_y = 0;                            //중복되는 코드인데 합치는 방법 없을까?
    for (let j = 0; j < word.length; j++) {
        if (arr[j] === 'y' ){
            count_y++ 
        }
    }
    
    if (count_p == count_y) {                   //개수 같으면 true, 다르면 false 출력
        answer = true
    }else {
        answer = false
    }
    return answer;
}


다른풀이===========================

function solution(s){
    var count1= 0, count2 = 0;
    for(let i=0; i<s.length; i++){
        if(s[i]=='p' | s[i] == 'P'){
            count1++;
        }
        else if(s[i]=='y' | s[i] == 'Y'){
            count2++;
        }
    }
    var answer = true;
    if(count1!=count2){
        answer = false;
    }

    // [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
    console.log('Hello Javascript')

    return answer;
}
