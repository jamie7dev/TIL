나누어 떨어지는 숫자 배열
문제 설명
array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.
divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.

제한사항
arr은 자연수를 담은 배열입니다.
정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.
divisor는 자연수입니다.
array는 길이 1 이상인 배열입니다.
입출력 예
arr	divisor	return
[5, 9, 7, 10]	5	[5, 10]
[2, 36, 1, 3]	1	[1, 2, 3, 36]
[3,2,6]	10	[-1]
입출력 예 설명
입출력 예#1
arr의 원소 중 5로 나누어 떨어지는 원소는 5와 10입니다. 따라서 [5, 10]을 리턴합니다.

입출력 예#2
arr의 모든 원소는 1으로 나누어 떨어집니다. 원소를 오름차순으로 정렬해 [1, 2, 3, 36]을 리턴합니다.

입출력 예#3
3, 2, 6은 10으로 나누어 떨어지지 않습니다. 나누어 떨어지는 원소가 없으므로 [-1]을 리턴합니다.

---------------------------------------

function solution(arr, divisor) {
    var answer = [];
    
    for (let i = 0; i < arr.length; i++){
        if (arr[i] % divisor == 0) {            // 나머지가 없으면
            answer.push(arr[i])                 //.push() 배열에 요소 넣기
        }
    }
    if (answer.length == 0){                    // 배열에 아무것도 없으면
            answer.push(-1)                     // '-1'만 넣기
    }
    /////////////////오름차순 정렬
    // answer.sort(); 사용하는데 숫자는 문자열로 변환된 후 전달됨. 
    //때문에 '1'이 들어가면 무조건 앞으로 와서 [10, 5]로 출력됨 -> 추가 함수 필요
    answer.sort(function(a, b){
        if (a > b) return 1;
        if (a == b) return 0;
        if (a < b) return -1;
    })
    return answer;
}

다른풀이=========================

function solution(arr, divisor) {
    var answer = [];
    let a = 0;
    for(let i = 0; i<arr.length; i++){
        if(arr[i]%divisor==0){
            answer.push(arr[i]);
            a=1;
        }
    }
    if (a==0){
        answer.push(-1)
    }
    answer.sort(function(a,b){
        return a-b;             //양수값이며 true, 음수나 0이면 false가 됨.
    });
    return answer;
}


////////////////////숫자 오름차순 정렬
숫자 배열에 sort() 수행 시, 숫자를 문자열로 변환하여 정렬.
11이 '1'이 들어가서 9보다 앞으로 정렬되므로 추가 함수 사용!
a가 크면 양수, b가 크면 음수, 같으면 0이 리턴.
const arr = [22, 11, 2, 9, 1, 5];

arr.sort(function (a, b) {
  return a - b;
});
console.log(arr);       //[ 1, 2, 5, 9, 11, 22 ]
